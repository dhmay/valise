#!/usr/bin/env python
"""
extract scan numbers with low Q-values from a percolator psm output file. Write them one per line to a file
"""

import argparse
import logging
from datetime import datetime
import csv

__author__ = "Damon May"
__copyright__ = "Copyright (c) 2015 Damon May"
__license__ = ""
__version__ = ""

logger = logging.getLogger(__name__)

MAX_QVALUE = 0.01

def main():

    # declare args
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('infile', type=argparse.FileType('r'),
                        help='input file')
    parser.add_argument('outfile', type=argparse.FileType('w'),
                        help='output file')

    parser.add_argument('--debug', action="store_true", help='Enable debug logging')
    args = parser.parse_args()

    # logging
    logging.basicConfig(level=logging.INFO, 
                        format="%(asctime)s %(levelname)s: %(message)s")
    if args.debug:
        logger.setLevel(logging.DEBUG)
        # any module-specific debugging goes below

    reader = csv.DictReader(args.infile, delimiter='\t')
    n_found = 0
    for row in reader:
        if float(row['percolator q-value']) < MAX_QVALUE:
            args.outfile.write(row['sequence'] + '\n')
            n_found += 1
    args.outfile.close()
    print("Done. Wrote %d sequencess" % n_found)
 
    

start_time = datetime.now()
logger.debug("Start time: %s" % start_time)
main()
logger.debug("End time: %s" % datetime.now())
logger.debug("Elapsed time: %s" % (datetime.now() - start_time))
