#!/usr/bin/env python
"""
Filter a .tsv file by one column, keeping rows with values from a list provided in another file
"""

import argparse
import logging
from datetime import datetime
import csv
import math
import os
import numpy as np
from pyvalise.util import charts

__author__ = "Damon May"
__copyright__ = "Copyright (c) 2015 Damon May"
__license__ = ""
__version__ = ""

logger = logging.getLogger(__name__)


def main():
    # declare args
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('infile', type=argparse.FileType('r'),
                        help='input spreadsheet file')
    parser.add_argument('--valuesfile', required=True, type=argparse.FileType('r'),
                        help='input file of values to keep (one per line)')
    parser.add_argument('--column', required=True, help='column')
    parser.add_argument('--out', required=True, type=argparse.FileType('w'),
                        help='output file')
    parser.add_argument('--debug', action="store_true", help='Enable debug logging')
    args = parser.parse_args()

    # logging
    logging.basicConfig(level=logging.INFO,
                        format="%(asctime)s %(levelname)s: %(message)s")
    if args.debug:
        logger.setLevel(logging.DEBUG)

    values_tokeep = set([line.strip() for line in args.valuesfile])
    print("Read %d values to keep." % len(values_tokeep))

    reader = csv.DictReader(args.infile, delimiter='\t')
    assert(args.column in reader.fieldnames)
    n_written = 0
    n_total = 0
    args.out.write('\t'.join(reader.fieldnames) + '\n')
    for row in reader:
        n_total += 1
        valstring = row[args.column]
        if valstring in values_tokeep:
            n_written += 1
            args.out.write('\t'.join([row[fieldname] for fieldname in reader.fieldnames]) + '\n')

    print("Done. Wrote %d of %d rows." % (n_written, n_total))


start_time = datetime.now()
main()
end_time = datetime.now() - start_time

logger.debug("Execution time: %s" % end_time)
