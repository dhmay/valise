#!/usr/bin/env python
"""
Proportional Venn diagram
"""

import argparse
import logging
from datetime import datetime
from pyvalise.util import venn
from pyvalise.util import charts

__author__ = "Damon May"
__copyright__ = "Copyright (c) 2015 Damon May"
__license__ = ""
__version__ = ""

logger = logging.getLogger(__name__)


def main():

    # declare args
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('total1', type=int, help='Count of total elements in set 1')
    parser.add_argument('total2', type=int, help='Count of total elements in set 2')
    parser.add_argument('intersection', type=int, help='Count of intersection elements')
    parser.add_argument('outpdf', type=argparse.FileType('w'),
                        help='output pdf')
    parser.add_argument('--title', help="title for the chart")
    parser.add_argument('--labels', help="labels for sets (comma-separated)")

    parser.add_argument('--debug', action="store_true", help='Enable debug logging')
    args = parser.parse_args()

    # logging
    logging.basicConfig(level=logging.INFO, 
                        format="%(asctime)s %(levelname)s: %(message)s")
    if args.debug:
        logger.setLevel(logging.DEBUG)
        # any module-specific debugging goes below

    labels = None
    if args.labels:
        labels = args.labels.split(',')
        assert(len(labels) == 2)
        print("Labels: %s" % labels)
    myvenn = venn.proportional_venn_from_counts_2d(args.total1, args.total2, args.intersection, title=args.title,
                                                   labels=labels)
    mycharts = [myvenn]
    charts.write_pdf(mycharts, args.outpdf)
    print("Wrote PDF file %s" % args.outpdf.name)


start_time = datetime.now()
main()
end_time = datetime.now() - start_time

logger.debug("Execution time: %s" % end_time)
