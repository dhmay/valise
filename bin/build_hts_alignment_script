#!/usr/bin/env python

"""Analyze a fastq file from an aligned HTS sample run on a library"""

import logging
import argparse
from pyvalise import hts
from pyvalise.util import commandline

__author__ = "Damon May"
__copyright__ = "Copyright (c) 2012-2014 Fred Hutchinson Cancer Research Center"
__license__ = ""
__version__ = ""

log = logging.getLogger(__name__)

DEFAULT_MINREADS = 25


def main():
    # digest args
    logging.basicConfig(
        level=logging.INFO, format="%(asctime)s %(levelname)s: %(message)s")

    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('fastq', type=argparse.FileType('r'),
                        help='input fastq (may be gzipped)')
    parser.add_argument('dnafasta', type=argparse.FileType('r'),
                        help='input dna fasta to align to (requires index)')
    parser.add_argument('--debug', action="store_true",
                        help='Enable debug logging')

    parser.add_argument('alignmentdir', type=commandline.argtype_dir_rw,
                        help="Output directory for alignment files")
    parser.add_argument('outfile', type=argparse.FileType('w'),
                        help='script file to write')
    parser.add_argument('--cores', type=int, default=hts.DEFAULT_N_CORES,
                        help="# cores to run on")
    parser.add_argument('--library', type=argparse.FileType('r'),
                        help='library file for analysis')
    parser.add_argument('--runcutadapt', action="store_true",
                        help='Run cutadapt?', default=False)
    parser.add_argument('--buildcharts', action="store_true",
                        help='Build charts?', default=False)

    args = parser.parse_args()

    if args.debug:
        log.setLevel(logging.DEBUG)

    hts.build_alignment_script(args.fastq, args.dnafasta, args.alignmentdir,
                               args.outfile, n_cores=args.cores,
                               library_file=args.library,
                               run_cutadapt=args.runcutadapt, build_charts=args.buildcharts)


main()
